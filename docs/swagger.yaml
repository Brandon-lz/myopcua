basePath: /
definitions:
  alicerouters.ApiResponse:
    properties:
      message:
        example: pong
        type: string
    type: object
  noderouters.AddNodeToReadRequest:
    properties:
      data-type:
        example: Int32
        type: string
      name:
        example: MyVariable
        type: string
      node-id:
        example: ns=2;i=2
        type: string
    required:
    - name
    - node-id
    type: object
  noderouters.AddNodeToReadResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/noderouters.OpcNodeOutput'
      message:
        example: 节点添加成功
        type: string
    type: object
  noderouters.DeleteNodeResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        type: string
      message:
        example: 节点删除成功
        type: string
    type: object
  noderouters.GetNodeResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/noderouters.OpcNodeWithDataOutput'
      message:
        example: 节点信息
        type: string
    type: object
  noderouters.OpcNodeOutput:
    properties:
      data-type:
        example: Int32
        type: string
      name:
        example: MyVariable
        type: string
      node-id:
        example: ns=2;s=MyVariable
        type: string
    type: object
  noderouters.OpcNodeWithDataOutput:
    properties:
      data-type:
        example: Int32
        type: string
      name:
        example: MyVariable
        type: string
      node-id:
        example: ns=2;s=MyVariable
        type: string
      value:
        example: "123"
        type: string
    type: object
  routers.ApiResponse:
    properties:
      message:
        example: 欢迎使用OPC-UA OpenAPI
        type: string
    type: object
  smithrouters.ApiResponse:
    properties:
      message:
        example: pong
        type: string
    type: object
  webhookrouters.AddWebhookConfigRequest:
    properties:
      active:
        description: 是否激活，不传的话默认true
        example: true
        type: boolean
      name:
        description: webhook名称，可以为空
        example: webhook1
        type: string
      url:
        description: webhook地址
        example: http://192.168.1.1:8800/notify
        type: string
    type: object
  webhookrouters.AddWebhookConfigResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/webhookrouters.WebHookConfigRead'
      message:
        example: 节点添加成功
        type: string
    type: object
  webhookrouters.WebHookConfigRead:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      url:
        type: string
    required:
    - active
    - created_at
    - id
    - name
    - updated_at
    - url
    type: object
host: localhost:8080
info:
  contact:
    email: advanced_to@163.com
  description: OPC-UA转http协议
  title: OPC-UA Open API
  version: "1.0"
paths:
  /api/v1/:
    get:
      consumes:
      - application/json
      description: 根路由
      produces:
      - application/json
      responses:
        "200":
          description: 欢迎使用OPC-UA OpenAPI
          schema:
            $ref: '#/definitions/routers.ApiResponse'
      summary: 根路由
      tags:
      - default
  /api/v1/alice/ping:
    get:
      consumes:
      - application/json
      description: Ping 路由
      produces:
      - application/json
      responses:
        "200":
          description: pong
          schema:
            $ref: '#/definitions/alicerouters.ApiResponse'
      summary: Ping 路由
      tags:
      - alice的接口
  /api/v1/opc-node/add-node-to-read:
    post:
      consumes:
      - application/json
      description: AddNodeToRead 路由
      parameters:
      - description: 见下方JSON
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/noderouters.AddNodeToReadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 节点添加成功
          schema:
            $ref: '#/definitions/noderouters.AddNodeToReadResponse'
      security:
      - BearerAuth: []
      summary: AddNodeToRead 路由
      tags:
      - nodes
  /api/v1/opc-node/delete-node/{id}:
    delete:
      consumes:
      - application/json
      description: DeleteNode 路由
      parameters:
      - description: 节点ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 节点删除成功
          schema:
            $ref: '#/definitions/noderouters.DeleteNodeResponse'
      security:
      - BearerAuth: []
      summary: DeleteNode 路由
      tags:
      - nodes
  /api/v1/opc-node/get-node/{id}:
    get:
      consumes:
      - application/json
      description: GetNode 路由
      parameters:
      - description: 节点ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 节点信息
          schema:
            $ref: '#/definitions/noderouters.GetNodeResponse'
      security:
      - BearerAuth: []
      summary: GetNode 路由
      tags:
      - nodes
  /api/v1/ping:
    get:
      consumes:
      - application/json
      description: Ping 路由
      produces:
      - application/json
      responses:
        "200":
          description: pong
          schema:
            $ref: '#/definitions/routers.ApiResponse'
      security:
      - BearerAuth: []
      summary: Ping 路由
      tags:
      - default
  /api/v1/smith/ping:
    get:
      consumes:
      - application/json
      description: Ping 路由
      produces:
      - application/json
      responses:
        "200":
          description: pong
          schema:
            $ref: '#/definitions/smithrouters.ApiResponse'
      summary: Ping 路由
      tags:
      - smith的接口
  /api/v1/webhook/config:
    post:
      consumes:
      - application/json
      description: 配置一条新的webhook
      parameters:
      - description: Webhook configuration
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/webhookrouters.AddWebhookConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhookrouters.AddWebhookConfigResponse'
      summary: 配置一条新的webhook
      tags:
      - Webhook
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
