{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "OPC-UA转http协议",
        "title": "OPC-UA Open API",
        "contact": {
            "email": "advanced_to@163.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/": {
            "get": {
                "description": "根路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "summary": "根路由",
                "responses": {
                    "200": {
                        "description": "欢迎使用OPC-UA OpenAPI",
                        "schema": {
                            "$ref": "#/definitions/routers.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/opc-node/add-node-to-read": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "AddNodeToRead 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "opc-nodes"
                ],
                "summary": "AddNodeToRead 路由",
                "parameters": [
                    {
                        "description": "见下方JSON",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/noderouters.AddNodeToReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "节点添加成功",
                        "schema": {
                            "$ref": "#/definitions/noderouters.AddNodeToReadResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/opc-node/delete-node/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "DeleteNode 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "opc-nodes"
                ],
                "summary": "DeleteNode 路由",
                "parameters": [
                    {
                        "type": "string",
                        "description": "节点ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "节点删除成功",
                        "schema": {
                            "$ref": "#/definitions/noderouters.DeleteNodeResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/opc-node/get-node/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "GetNode 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "opc-nodes"
                ],
                "summary": "GetNode 路由",
                "parameters": [
                    {
                        "type": "string",
                        "description": "节点ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "节点信息",
                        "schema": {
                            "$ref": "#/definitions/noderouters.GetNodeResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/ping": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ping 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "summary": "ping 路由",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/webhook": {
            "get": {
                "description": "根据名称获取webhook配置",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "根据名称获取webhook配置",
                "parameters": [
                    {
                        "type": "string",
                        "example": "webhook1",
                        "description": "webhook名称",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.GetWebhookConfigByNameResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "# 配置一条新的webhook\n## 说明\n该接口用于配置一条新的webhook，并通过when字段或condition_id字段配置触发条件，当条件满足时会触发webhook，并将所需要的数据传给webhook url接口。\n## 请求参数\n\n- name：webhook名称，为空时系统会自动生成一个uuid\n- url：webhook地址（POST请求），必填，当条件满足时会调用该url，并挂载数据到body中\n- active：是否激活，不传的话默认true\n- when：条件，里面是一个json，具体的格式看/api/v1/webhook/condition接口说明，when其实就是一个condition条件。该字段和condition_id字段必须传一个。\n- condition_id：条件id，将条件condition配置到webhook上，该字段和when字段必须传一个。\n- need_node_list：需要的节点值列表，条件触发时会传参给webhook\n## 例1：当节点node1值等于123时，发送通知到http://localhost:8080/api/v1/webhook/example\n```json\n{\n\"active\": true,\n\"name\":\"webhook1\",\n\"url\": \"http://localhost:8080/api/v1/webhook/example\",\n\"when\": {\n\"rule\": {\n\"node_name\": \"node1\",\n\"type\": \"eq\",\n\"value\": \"123\"\n}\n}\n}\n```\n使用when字段会创建新的条件condition，并将其配置在这个webhook上\n## 例2：使用已经配置好的条件condition\n```json\n{\n\"active\": true,\n\"url\": \"http://localhost:8080/api/v1/webhook/example\",\n\"condition_id\": 10\n}\n```\n## 常见异常\n- \"code\": 2007 代表数据重复，不能创建重复的webhook，具体重复了哪个字段，请看ConstraintName最后一个下划线后面的字段名\n- \"code\": 400 \"json: cannot unmarshal string into Go struct field AddWebhookConfigRequest.condition_id of type int64\"  ： 看下body参数，数字类型传成了字符串",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "配置一条新的webhook",
                "parameters": [
                    {
                        "description": "Webhook configuration",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.AddWebhookConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.AddWebhookConfigResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/condition": {
            "post": {
                "description": "# 参数说明\n## 请求参数\n| 参数名称 | 类型 | 必填 | 描述 |\n| --- | --- | --- | --- |\n| and | list中嵌套本参数 | 否 | 规则列表，逻辑与 |\n| or | list中嵌套本参数 | 否 | 规则列表，逻辑或 |\n| rule | Rule | 否 | 规则 |\n## Rule类型 定义\n| 字段 | 类型 | 是否必填 | 描述 |\n| --- | --- | --- | --- |\n| node_name | string | 是 | 节点名称 |\n| type | string | 是 | 规则类型，支持eq ne gt lt all-time in not-in |\n| value | any | 是 | 比对值 |\n## 参数示例1 : 当节点MyVariable大于123时触发\n```json\n{\n\"rule\": {\n\"node_name\": \"MyVariable\",\n\"type\": \"gt\",\n\"value\": 123\n}\n}\n```\n## 参数示例2 : 当节点node1等于在[\"abc\",\"def\"]，并且节点node2等于123时触发\n```json\n{\n\"and\": [\n{\n\"rule\": {\n\"node_name\": \"node1\",\n\"type\": \"in\",\n\"value\": [\n\"abc\",\n\"def\"\n]\n}\n},\n{\n\"rule\": {\n\"node_name\": \"node2\",\n\"type\": \"eq\",\n\"value\": 123\n}\n}\n]\n}\n```\n## 参数示例3 : 一直触发\n```json\n{\n\"rule\": {\n\"type\": \"all-time\"\n}\n}\n```\n*注意：Condition是嵌套类型，Condition包含and，or，rule，所以and里面可以嵌套and。。。无限嵌套*",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "创建触发条件",
                "parameters": [
                    {
                        "description": "创建条件",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.CreateConditionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.CreateConditionResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/condition/{id}": {
            "put": {
                "description": "# 参数说明\n## 请求参数\n| 参数名称 | 类型 | 必填 | 描述 |\n| --- | --- | --- | --- |\n| id | int | 是 | 条件ID |\n| and | list中嵌套本参数 | 否 | 规则列表，逻辑与 |\n| or | list中嵌套本参数 | 否 | 规则列表，逻辑或 |\n| rule | Rule | 否 | 规则 |\n## Rule类型 定义\n| 字段 | 类型 | 是否必填 | 描述 |\n| --- | --- |\n| node_name | string | 是 | 节点名称 |\n| type | string | 是 | 规则类型，支持eq ne gt lt all-time in not-in |\n| value | any | 是 | 比对值 |\n## 参数示例1 : 更新条件ID为1的条件，将节点MyVariable大于123改为小于123\n```json\n{\n\"id\": 1,\n\"rule\": {\n\"node_name\": \"MyVariable\",\n\"type\": \"lt\",\n\"value\": 123\n}\n}\n```\n## 参数示例2 : 更新条件ID为2的条件，将节点node1等于在[\"abc\",\"def\"]，并且节点node2等于123改为节点node1等于在[\"abc\",\"def\"]，并且节点node2等于123\n```json\n{\n\"id\": 2,\n\"and\": [\n{\n\"rule\": {\n\"node_name\": \"node1\",\n\"type\": \"in\",\n\"value\": [\n\"abc\",\n\"def\"\n]\n}\n},\n{\n\"rule\": {\n\"node_name\": \"node2\",\n\"type\": \"eq\",\n\"value\": 123\n}\n}\n]\n}\n```\n## 参数示例3 : 更新条件ID为3的条件，将一直触发改为节点node1等于123\n```json\n{\n\"id\": 3,\n\"rule\": {\n\"node_name\": \"node1\",\n\"type\": \"eq\",\n\"value\": 123\n}\n}\n```\n*注意：Condition是嵌套类型，Condition包含and，or，rule，所以and里面可以嵌套and。。。无限嵌套*",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "更新触发条件",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "条件ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新条件",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.UpdateConditionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.UpdateConditionResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "删除触发条件",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "条件ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.DeleteConditionResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/conditions": {
            "get": {
                "description": "# 参数说明\n## 请求参数\n| 参数名称 | 类型 | 必填 | 描述 |\n| --- | --- | --- | --- |\n| page | int | 是 | 页码 |\n| page_size | int | 是 | 每页数量 |\n## 返回参数\n| 参数名称 | 类型 | 描述 |\n| --- | --- | --- |\n| id | int | 条件ID |\n| condition | string | 条件表达式 |\n| created_at | time.Time | 创建时间 |\n| updated_at | time.Time | 更新时间 |",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "获取触发条件列表",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.GetAllConditionsByPageResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/example": {
            "post": {
                "description": "webhook示例",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "webhook示例",
                "parameters": [
                    {
                        "description": "Webhook example",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.WebHookExampleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.WebHookExampleResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/webhook/{id}": {
            "get": {
                "description": "根据id获取webhook配置",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "根据id获取webhook配置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "webhook id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webhookrouters.GetWebhookConfigByIdResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "healthCheck 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "summary": "healthCheck 路由",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "globaldata.Condition": {
            "type": "object",
            "properties": {
                "and": {
                    "description": "规则列表，逻辑与",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/globaldata.Condition"
                    }
                },
                "or": {
                    "description": "规则列表，逻辑或",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/globaldata.Condition"
                    }
                },
                "rule": {
                    "description": "规则",
                    "allOf": [
                        {
                            "$ref": "#/definitions/globaldata.Rule"
                        }
                    ]
                }
            }
        },
        "globaldata.Rule": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "node_name": {
                    "description": "节点名称",
                    "type": "string",
                    "example": "MyVariable"
                },
                "type": {
                    "description": "规则类型 eq, ne, gt, lt, all-time, in, not-in: 相等, 不相等, 大于, 小于, 全时间, 包含, 不包含",
                    "type": "string",
                    "enum": [
                        "eq",
                        "ne",
                        "gt",
                        "lt",
                        "all-time",
                        "in",
                        "not-in"
                    ],
                    "example": "eq"
                },
                "value": {
                    "description": "规则value"
                }
            }
        },
        "noderouters.AddNodeToReadRequest": {
            "type": "object",
            "required": [
                "name",
                "node_id"
            ],
            "properties": {
                "data_type": {
                    "type": "string",
                    "example": "Int32"
                },
                "name": {
                    "type": "string",
                    "example": "MyVariable"
                },
                "node_id": {
                    "type": "string",
                    "example": "ns=2;i=2"
                }
            }
        },
        "noderouters.AddNodeToReadResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/noderouters.OpcNodeOutput"
                },
                "message": {
                    "type": "string",
                    "example": "节点添加成功"
                }
            }
        },
        "noderouters.DeleteNodeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "节点删除成功"
                }
            }
        },
        "noderouters.GetNodeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/noderouters.OpcNodeWithDataOutput"
                },
                "message": {
                    "type": "string",
                    "example": "节点信息"
                }
            }
        },
        "noderouters.OpcNodeOutput": {
            "type": "object",
            "properties": {
                "data_type": {
                    "type": "string",
                    "example": "Int32"
                },
                "name": {
                    "type": "string",
                    "example": "MyVariable"
                },
                "node_id": {
                    "type": "string",
                    "example": "ns=2;s=MyVariable"
                }
            }
        },
        "noderouters.OpcNodeWithDataOutput": {
            "type": "object",
            "properties": {
                "data_type": {
                    "type": "string",
                    "example": "Int32"
                },
                "name": {
                    "type": "string",
                    "example": "MyVariable"
                },
                "node_id": {
                    "type": "string",
                    "example": "ns=2;s=MyVariable"
                },
                "value": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "routers.ApiResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "欢迎使用OPC-UA OpenAPI"
                }
            }
        },
        "webhookrouters.AddWebhookConfigRequest": {
            "type": "object",
            "required": [
                "need_node_list",
                "url"
            ],
            "properties": {
                "active": {
                    "description": "是否激活，不传的话默认true",
                    "type": "boolean",
                    "example": true
                },
                "condition_id": {
                    "description": "条件id，不传的话默认新增条件",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "webhook名称，可以为空",
                    "type": "string",
                    "example": "webhook1"
                },
                "need_node_list": {
                    "description": "需要的节点值列表，到时候会传参给webhook",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "description": "webhook地址",
                    "type": "string",
                    "example": "http://192.168.1.1:8800/notify"
                },
                "when": {
                    "description": "触发条件，为空时相当于通知所有数据变化",
                    "allOf": [
                        {
                            "$ref": "#/definitions/globaldata.Condition"
                        }
                    ]
                }
            }
        },
        "webhookrouters.AddWebhookConfigResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/webhookrouters.WebHookConfigRead"
                },
                "message": {
                    "type": "string",
                    "example": "节点添加成功"
                }
            }
        },
        "webhookrouters.CreateConditionRequest": {
            "type": "object",
            "properties": {
                "and": {
                    "description": "规则列表，逻辑与",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/globaldata.Condition"
                    }
                },
                "or": {
                    "description": "规则列表，逻辑或",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/globaldata.Condition"
                    }
                },
                "rule": {
                    "description": "规则",
                    "allOf": [
                        {
                            "$ref": "#/definitions/globaldata.Rule"
                        }
                    ]
                }
            }
        },
        "webhookrouters.CreateConditionResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/webhookrouters.WebHookConditionRead"
                },
                "message": {
                    "type": "string",
                    "example": "Condition created successfully"
                }
            }
        },
        "webhookrouters.DeleteConditionResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Condition deleted successfully"
                }
            }
        },
        "webhookrouters.GetAllConditionsByPageData": {
            "type": "object"
        },
        "webhookrouters.GetAllConditionsByPageResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/webhookrouters.GetAllConditionsByPageData"
                },
                "message": {
                    "type": "string",
                    "example": "Condition get successfully"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "webhookrouters.GetWebhookConfigByIdResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/webhookrouters.WebHookConfigRead"
                },
                "message": {
                    "type": "string",
                    "example": "Webhook configuration get successfully"
                }
            }
        },
        "webhookrouters.GetWebhookConfigByNameResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/webhookrouters.WebHookConfigRead"
                },
                "message": {
                    "type": "string",
                    "example": "Webhook configuration get successfully"
                }
            }
        },
        "webhookrouters.UpdateConditionRequest": {
            "type": "object",
            "properties": {
                "and": {
                    "description": "规则列表，逻辑与",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/globaldata.Condition"
                    }
                },
                "or": {
                    "description": "规则列表，逻辑或",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/globaldata.Condition"
                    }
                },
                "rule": {
                    "description": "规则",
                    "allOf": [
                        {
                            "$ref": "#/definitions/globaldata.Rule"
                        }
                    ]
                }
            }
        },
        "webhookrouters.UpdateConditionResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/webhookrouters.WebHookConditionRead"
                },
                "message": {
                    "type": "string",
                    "example": "Condition updated successfully"
                }
            }
        },
        "webhookrouters.WebHookConditionRead": {
            "type": "object",
            "required": [
                "condition",
                "created_at",
                "id",
                "updated_at"
            ],
            "properties": {
                "condition": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "webhookrouters.WebHookConfigRead": {
            "type": "object",
            "required": [
                "active",
                "created_at",
                "id",
                "name",
                "needNodeList",
                "updated_at",
                "url"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "condition_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "needNodeList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "when": {
                    "type": "string"
                }
            }
        },
        "webhookrouters.WebHookExampleRequest": {
            "type": "object",
            "required": [
                "values"
            ],
            "properties": {
                "values": {
                    "description": "节点值 any类型",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "webhookrouters.WebHookExampleResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "string",
                    "example": "webhook example"
                },
                "message": {
                    "type": "string",
                    "example": "webhook example success"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}