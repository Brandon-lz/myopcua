// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "advanced_to@163.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/": {
            "get": {
                "description": "根路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "summary": "根路由",
                "responses": {
                    "200": {
                        "description": "欢迎使用OPC-UA OpenAPI",
                        "schema": {
                            "$ref": "#/definitions/routers.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/add-node-to-read": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "AddNodeToRead 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "summary": "AddNodeToRead 路由",
                "parameters": [
                    {
                        "description": "见下方JSON",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.AddNodeToReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "节点添加成功",
                        "schema": {
                            "$ref": "#/definitions/routers.AddNodeToReadResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/alice/ping": {
            "get": {
                "description": "Ping 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alice的接口"
                ],
                "summary": "Ping 路由",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "$ref": "#/definitions/alicerouters.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/ping": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ping 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "summary": "Ping 路由",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "$ref": "#/definitions/routers.ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/smith/ping": {
            "get": {
                "description": "Ping 路由",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "smith的接口"
                ],
                "summary": "Ping 路由",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "$ref": "#/definitions/smithrouters.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "alicerouters.ApiResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "pong"
                }
            }
        },
        "routers.AddNodeToReadRequest": {
            "type": "object",
            "required": [
                "name",
                "node-id"
            ],
            "properties": {
                "data-type": {
                    "type": "string",
                    "example": "Int32"
                },
                "name": {
                    "type": "string",
                    "example": "MyVariable"
                },
                "node-id": {
                    "type": "string",
                    "example": "ns=2;s=MyVariable"
                }
            }
        },
        "routers.AddNodeToReadResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "节点添加成功"
                }
            }
        },
        "routers.ApiResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "欢迎使用OPC-UA OpenAPI"
                }
            }
        },
        "smithrouters.ApiResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "pong"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "OPC-UA Open API",
	Description:      "OPC-UA转http协议",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
